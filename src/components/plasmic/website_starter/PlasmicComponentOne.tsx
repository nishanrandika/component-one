// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fUERLDF7B6PkVocLHV4JH5
// Component: V7k6HODnL8o0

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: fUERLDF7B6PkVocLHV4JH5/projectcss
import sty from "./PlasmicComponentOne.module.css"; // plasmic-import: V7k6HODnL8o0/css

import IconsChevronIcon from "./icons/PlasmicIcon__IconsChevron"; // plasmic-import: FD7YGGRSBTbp/icon

createPlasmicElementProxy;

export type PlasmicComponentOne__VariantMembers = {};
export type PlasmicComponentOne__VariantsArgs = {};
type VariantPropType = keyof PlasmicComponentOne__VariantsArgs;
export const PlasmicComponentOne__VariantProps = new Array<VariantPropType>();

export type PlasmicComponentOne__ArgsType = {};
type ArgPropType = keyof PlasmicComponentOne__ArgsType;
export const PlasmicComponentOne__ArgProps = new Array<ArgPropType>();

export type PlasmicComponentOne__OverridesType = {
  root?: Flex__<"div">;
  group1073717185?: Flex__<"div">;
  rectangle2649203?: Flex__<"div">;
  group1073716564?: Flex__<"div">;
  group1073716555?: Flex__<"div">;
  group1073716542?: Flex__<"div">;
  group1073716293?: Flex__<"div">;
  _3UpCards?: Flex__<"div">;
  sectionTitle?: Flex__<"div">;
  text?: Flex__<"div">;
  optionalEyebrow?: Flex__<"div">;
  headerSubline?: Flex__<"div">;
  sectionTitle2?: Flex__<"div">;
  loremIpsumDolorSitAmetConsecteturAdipiscingElit?: Flex__<"div">;
  cta?: Flex__<"div">;
  buttonText?: Flex__<"div">;
  text2?: Flex__<"div">;
  mediaSizes?: Flex__<"div">;
  image?: Flex__<"div">;
  screenshot20230518At12181?: Flex__<"div">;
  group1073717184?: Flex__<"div">;
  group1073717183?: Flex__<"div">;
  group1073716550?: Flex__<"div">;
  editorialCardsDesktop?: Flex__<"div">;
  text3?: Flex__<"div">;
  image2?: Flex__<"div">;
  mediaSizes2?: Flex__<"div">;
  image3?: Flex__<"div">;
  travelTipsRyanCollage02396531?: Flex__<"div">;
  editorialContentPanel?: Flex__<"div">;
  content?: Flex__<"div">;
  tagGroup?: Flex__<"div">;
  tag?: Flex__<"div">;
  usa?: Flex__<"div">;
  tag2?: Flex__<"div">;
  usa2?: Flex__<"div">;
  tag3?: Flex__<"div">;
  usa3?: Flex__<"div">;
  titleBody?: Flex__<"div">;
  headline?: Flex__<"div">;
  body?: Flex__<"div">;
  date?: Flex__<"div">;
  buttonText2?: Flex__<"div">;
  text4?: Flex__<"div">;
  screenshot20230518At12182?: Flex__<"div">;
  group1073716551?: Flex__<"div">;
  editorialCardsDesktop2?: Flex__<"div">;
  text5?: Flex__<"div">;
  image4?: Flex__<"div">;
  mediaSizes3?: Flex__<"div">;
  image5?: Flex__<"div">;
  travelTipsRyanCollage02396532?: Flex__<"div">;
  editorialContentPanel2?: Flex__<"div">;
  content2?: Flex__<"div">;
  tagGroup2?: Flex__<"div">;
  tag4?: Flex__<"div">;
  usa4?: Flex__<"div">;
  tag5?: Flex__<"div">;
  usa5?: Flex__<"div">;
  tag6?: Flex__<"div">;
  usa6?: Flex__<"div">;
  titleBody2?: Flex__<"div">;
  headline2?: Flex__<"div">;
  body2?: Flex__<"div">;
  date2?: Flex__<"div">;
  buttonText3?: Flex__<"div">;
  text6?: Flex__<"div">;
  screenshot20230518At12183?: Flex__<"div">;
  group1073716553?: Flex__<"div">;
  editorialCardsDesktop3?: Flex__<"div">;
  text7?: Flex__<"div">;
  image6?: Flex__<"div">;
  mediaSizes4?: Flex__<"div">;
  image7?: Flex__<"div">;
  travelTipsRyanCollage02396533?: Flex__<"div">;
  editorialContentPanel3?: Flex__<"div">;
  content3?: Flex__<"div">;
  tagGroup3?: Flex__<"div">;
  tag7?: Flex__<"div">;
  usa7?: Flex__<"div">;
  tag8?: Flex__<"div">;
  usa8?: Flex__<"div">;
  tag9?: Flex__<"div">;
  usa9?: Flex__<"div">;
  titleBody3?: Flex__<"div">;
  headline3?: Flex__<"div">;
  body3?: Flex__<"div">;
  date3?: Flex__<"div">;
  buttonText4?: Flex__<"div">;
  text8?: Flex__<"div">;
  screenshot20230518At12184?: Flex__<"div">;
  group1073716554?: Flex__<"div">;
  editorialCardsDesktop4?: Flex__<"div">;
  text9?: Flex__<"div">;
  image8?: Flex__<"div">;
  mediaSizes5?: Flex__<"div">;
  image9?: Flex__<"div">;
  travelTipsRyanCollage02396534?: Flex__<"div">;
  editorialContentPanel4?: Flex__<"div">;
  content4?: Flex__<"div">;
  tagGroup4?: Flex__<"div">;
  tag10?: Flex__<"div">;
  usa10?: Flex__<"div">;
  tag11?: Flex__<"div">;
  usa11?: Flex__<"div">;
  tag12?: Flex__<"div">;
  usa12?: Flex__<"div">;
  titleBody4?: Flex__<"div">;
  headline4?: Flex__<"div">;
  body4?: Flex__<"div">;
  date4?: Flex__<"div">;
  buttonText5?: Flex__<"div">;
  text10?: Flex__<"div">;
  screenshot20230518At12185?: Flex__<"div">;
};

export interface DefaultComponentOneProps {
  className?: string;
}

const $$ = {};

function PlasmicComponentOne__RenderFunc(props: {
  variants: PlasmicComponentOne__VariantsArgs;
  args: PlasmicComponentOne__ArgsType;
  overrides: PlasmicComponentOne__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"group1073717185"}
        data-plasmic-override={overrides.group1073717185}
        className={classNames(projectcss.all, sty.group1073717185)}
      >
        <div
          data-plasmic-name={"rectangle2649203"}
          data-plasmic-override={overrides.rectangle2649203}
          className={classNames(projectcss.all, sty.rectangle2649203)}
        />

        <div
          data-plasmic-name={"group1073716564"}
          data-plasmic-override={overrides.group1073716564}
          className={classNames(projectcss.all, sty.group1073716564)}
        >
          <div
            data-plasmic-name={"group1073716555"}
            data-plasmic-override={overrides.group1073716555}
            className={classNames(projectcss.all, sty.group1073716555)}
          >
            <div
              data-plasmic-name={"group1073716542"}
              data-plasmic-override={overrides.group1073716542}
              className={classNames(projectcss.all, sty.group1073716542)}
            >
              <div
                data-plasmic-name={"group1073716293"}
                data-plasmic-override={overrides.group1073716293}
                className={classNames(projectcss.all, sty.group1073716293)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"_3UpCards"}
                  data-plasmic-override={overrides._3UpCards}
                  hasGap={true}
                  className={classNames(projectcss.all, sty._3UpCards)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"sectionTitle"}
                    data-plasmic-override={overrides.sectionTitle}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.sectionTitle)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"text"}
                      data-plasmic-override={overrides.text}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.text)}
                    >
                      <div
                        data-plasmic-name={"optionalEyebrow"}
                        data-plasmic-override={overrides.optionalEyebrow}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.optionalEyebrow
                        )}
                      >
                        {"destinations"}
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"headerSubline"}
                        data-plasmic-override={overrides.headerSubline}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.headerSubline
                        )}
                      >
                        <div
                          data-plasmic-name={"sectionTitle2"}
                          data-plasmic-override={overrides.sectionTitle2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.sectionTitle2
                          )}
                        >
                          {"Spotlight on Canada"}
                        </div>
                        <div
                          data-plasmic-name={
                            "loremIpsumDolorSitAmetConsecteturAdipiscingElit"
                          }
                          data-plasmic-override={
                            overrides.loremIpsumDolorSitAmetConsecteturAdipiscingElit
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.loremIpsumDolorSitAmetConsecteturAdipiscingElit
                          )}
                        >
                          {
                            "Creatives and thought-leaders reveal a hidden side to this vibrant, varied country"
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"cta"}
                      data-plasmic-override={overrides.cta}
                      className={classNames(projectcss.all, sty.cta)}
                    >
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"buttonText"}
                          data-plasmic-override={overrides.buttonText}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.buttonText)}
                        >
                          {false ? (
                            <IconsChevronIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xg86A
                              )}
                              role={"img"}
                            />
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qlbBc
                            )}
                          >
                            <div
                              data-plasmic-name={"text2"}
                              data-plasmic-override={overrides.text2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text2
                              )}
                            >
                              {"See more"}
                            </div>
                          </div>
                          <IconsChevronIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jKqhc
                            )}
                            role={"img"}
                          />
                        </Stack__>
                      ) : null}
                    </div>
                  </Stack__>
                </Stack__>
                <div
                  data-plasmic-name={"mediaSizes"}
                  data-plasmic-override={overrides.mediaSizes}
                  className={classNames(projectcss.all, sty.mediaSizes)}
                >
                  <div
                    data-plasmic-name={"image"}
                    data-plasmic-override={overrides.image}
                    className={classNames(projectcss.all, sty.image)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"screenshot20230518At12181"}
                        data-plasmic-override={
                          overrides.screenshot20230518At12181
                        }
                        className={classNames(
                          projectcss.all,
                          sty.screenshot20230518At12181
                        )}
                      />
                    ) : null}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"group1073717184"}
          data-plasmic-override={overrides.group1073717184}
          className={classNames(projectcss.all, sty.group1073717184)}
        >
          <div
            data-plasmic-name={"group1073717183"}
            data-plasmic-override={overrides.group1073717183}
            className={classNames(projectcss.all, sty.group1073717183)}
          >
            <div
              data-plasmic-name={"group1073716550"}
              data-plasmic-override={overrides.group1073716550}
              className={classNames(projectcss.all, sty.group1073716550)}
            >
              <div
                data-plasmic-name={"editorialCardsDesktop"}
                data-plasmic-override={overrides.editorialCardsDesktop}
                className={classNames(
                  projectcss.all,
                  sty.editorialCardsDesktop
                )}
              >
                {false ? (
                  <div
                    data-plasmic-name={"text3"}
                    data-plasmic-override={overrides.text3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text3
                    )}
                  >
                    {"03"}
                  </div>
                ) : null}
                <div
                  data-plasmic-name={"image2"}
                  data-plasmic-override={overrides.image2}
                  className={classNames(projectcss.all, sty.image2)}
                >
                  <div
                    data-plasmic-name={"mediaSizes2"}
                    data-plasmic-override={overrides.mediaSizes2}
                    className={classNames(projectcss.all, sty.mediaSizes2)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      >
                        <div
                          data-plasmic-name={"travelTipsRyanCollage02396531"}
                          data-plasmic-override={
                            overrides.travelTipsRyanCollage02396531
                          }
                          className={classNames(
                            projectcss.all,
                            sty.travelTipsRyanCollage02396531
                          )}
                        />
                      </div>
                    ) : null}
                  </div>
                </div>
                <div
                  data-plasmic-name={"editorialContentPanel"}
                  data-plasmic-override={overrides.editorialContentPanel}
                  className={classNames(
                    projectcss.all,
                    sty.editorialContentPanel
                  )}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"content"}
                    data-plasmic-override={overrides.content}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tagGroup"}
                      data-plasmic-override={overrides.tagGroup}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tagGroup)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag"}
                        data-plasmic-override={overrides.tag}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag)}
                      >
                        <div
                          data-plasmic-name={"usa"}
                          data-plasmic-override={overrides.usa}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa
                          )}
                        >
                          {"culture"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag2"}
                        data-plasmic-override={overrides.tag2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag2)}
                      >
                        <div
                          data-plasmic-name={"usa2"}
                          data-plasmic-override={overrides.usa2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa2
                          )}
                        >
                          {"CANADA"}
                        </div>
                      </Stack__>
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"tag3"}
                          data-plasmic-override={overrides.tag3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.tag3)}
                        >
                          <div
                            data-plasmic-name={"usa3"}
                            data-plasmic-override={overrides.usa3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.usa3
                            )}
                          >
                            {"tag"}
                          </div>
                        </Stack__>
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"titleBody"}
                      data-plasmic-override={overrides.titleBody}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.titleBody)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__v43Ow
                        )}
                      >
                        <div
                          data-plasmic-name={"headline"}
                          data-plasmic-override={overrides.headline}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.headline
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                      {false ? (
                        <div
                          data-plasmic-name={"body"}
                          data-plasmic-override={overrides.body}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.body
                          )}
                        >
                          {
                            "Optional description exposed.  Lorem ipsum dolor sit amet consectetur. Praesent id id in imperdiet dis mus..."
                          }
                        </div>
                      ) : null}
                    </Stack__>
                    <div
                      data-plasmic-name={"date"}
                      data-plasmic-override={overrides.date}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.date
                      )}
                    >
                      {"August 2024"}
                    </div>
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"buttonText2"}
                        data-plasmic-override={overrides.buttonText2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.buttonText2)}
                      >
                        {false ? (
                          <IconsChevronIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qmM6N
                            )}
                            role={"img"}
                          />
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0TSup
                          )}
                        >
                          <div
                            data-plasmic-name={"text4"}
                            data-plasmic-override={overrides.text4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text4
                            )}
                          >
                            {"Stay here"}
                          </div>
                        </div>
                        <IconsChevronIcon
                          className={classNames(projectcss.all, sty.svg__edD3O)}
                          role={"img"}
                        />
                      </Stack__>
                    ) : null}
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"screenshot20230518At12182"}
                data-plasmic-override={overrides.screenshot20230518At12182}
                className={classNames(
                  projectcss.all,
                  sty.screenshot20230518At12182
                )}
              />
            </div>
            <div
              data-plasmic-name={"group1073716551"}
              data-plasmic-override={overrides.group1073716551}
              className={classNames(projectcss.all, sty.group1073716551)}
            >
              <div
                data-plasmic-name={"editorialCardsDesktop2"}
                data-plasmic-override={overrides.editorialCardsDesktop2}
                className={classNames(
                  projectcss.all,
                  sty.editorialCardsDesktop2
                )}
              >
                {false ? (
                  <div
                    data-plasmic-name={"text5"}
                    data-plasmic-override={overrides.text5}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text5
                    )}
                  >
                    {"03"}
                  </div>
                ) : null}
                <div
                  data-plasmic-name={"image4"}
                  data-plasmic-override={overrides.image4}
                  className={classNames(projectcss.all, sty.image4)}
                >
                  <div
                    data-plasmic-name={"mediaSizes3"}
                    data-plasmic-override={overrides.mediaSizes3}
                    className={classNames(projectcss.all, sty.mediaSizes3)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"image5"}
                        data-plasmic-override={overrides.image5}
                        className={classNames(projectcss.all, sty.image5)}
                      >
                        <div
                          data-plasmic-name={"travelTipsRyanCollage02396532"}
                          data-plasmic-override={
                            overrides.travelTipsRyanCollage02396532
                          }
                          className={classNames(
                            projectcss.all,
                            sty.travelTipsRyanCollage02396532
                          )}
                        />
                      </div>
                    ) : null}
                  </div>
                </div>
                <div
                  data-plasmic-name={"editorialContentPanel2"}
                  data-plasmic-override={overrides.editorialContentPanel2}
                  className={classNames(
                    projectcss.all,
                    sty.editorialContentPanel2
                  )}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"content2"}
                    data-plasmic-override={overrides.content2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tagGroup2"}
                      data-plasmic-override={overrides.tagGroup2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tagGroup2)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag4"}
                        data-plasmic-override={overrides.tag4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag4)}
                      >
                        <div
                          data-plasmic-name={"usa4"}
                          data-plasmic-override={overrides.usa4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa4
                          )}
                        >
                          {"WELLNESS"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag5"}
                        data-plasmic-override={overrides.tag5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag5)}
                      >
                        <div
                          data-plasmic-name={"usa5"}
                          data-plasmic-override={overrides.usa5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa5
                          )}
                        >
                          {"BRITISH COLUMBIA"}
                        </div>
                      </Stack__>
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"tag6"}
                          data-plasmic-override={overrides.tag6}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.tag6)}
                        >
                          <div
                            data-plasmic-name={"usa6"}
                            data-plasmic-override={overrides.usa6}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.usa6
                            )}
                          >
                            {"tag"}
                          </div>
                        </Stack__>
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"titleBody2"}
                      data-plasmic-override={overrides.titleBody2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.titleBody2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pIhHx
                        )}
                      >
                        <div
                          data-plasmic-name={"headline2"}
                          data-plasmic-override={overrides.headline2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.headline2
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                      {false ? (
                        <div
                          data-plasmic-name={"body2"}
                          data-plasmic-override={overrides.body2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.body2
                          )}
                        >
                          {
                            "Optional description exposed.  Lorem ipsum dolor sit amet consectetur. Praesent id id in imperdiet dis mus..."
                          }
                        </div>
                      ) : null}
                    </Stack__>
                    <div
                      data-plasmic-name={"date2"}
                      data-plasmic-override={overrides.date2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.date2
                      )}
                    >
                      {"August 2024"}
                    </div>
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"buttonText3"}
                        data-plasmic-override={overrides.buttonText3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.buttonText3)}
                      >
                        {false ? (
                          <IconsChevronIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__o6H7O
                            )}
                            role={"img"}
                          />
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4GRp
                          )}
                        >
                          <div
                            data-plasmic-name={"text6"}
                            data-plasmic-override={overrides.text6}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text6
                            )}
                          >
                            {"Stay here"}
                          </div>
                        </div>
                        <IconsChevronIcon
                          className={classNames(projectcss.all, sty.svg__mAbpE)}
                          role={"img"}
                        />
                      </Stack__>
                    ) : null}
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"screenshot20230518At12183"}
                data-plasmic-override={overrides.screenshot20230518At12183}
                className={classNames(
                  projectcss.all,
                  sty.screenshot20230518At12183
                )}
              />
            </div>
            <div
              data-plasmic-name={"group1073716553"}
              data-plasmic-override={overrides.group1073716553}
              className={classNames(projectcss.all, sty.group1073716553)}
            >
              <div
                data-plasmic-name={"editorialCardsDesktop3"}
                data-plasmic-override={overrides.editorialCardsDesktop3}
                className={classNames(
                  projectcss.all,
                  sty.editorialCardsDesktop3
                )}
              >
                {false ? (
                  <div
                    data-plasmic-name={"text7"}
                    data-plasmic-override={overrides.text7}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text7
                    )}
                  >
                    {"03"}
                  </div>
                ) : null}
                <div
                  data-plasmic-name={"image6"}
                  data-plasmic-override={overrides.image6}
                  className={classNames(projectcss.all, sty.image6)}
                >
                  <div
                    data-plasmic-name={"mediaSizes4"}
                    data-plasmic-override={overrides.mediaSizes4}
                    className={classNames(projectcss.all, sty.mediaSizes4)}
                  >
                    {false ? (
                      <div
                        data-plasmic-name={"image7"}
                        data-plasmic-override={overrides.image7}
                        className={classNames(projectcss.all, sty.image7)}
                      >
                        <div
                          data-plasmic-name={"travelTipsRyanCollage02396533"}
                          data-plasmic-override={
                            overrides.travelTipsRyanCollage02396533
                          }
                          className={classNames(
                            projectcss.all,
                            sty.travelTipsRyanCollage02396533
                          )}
                        />
                      </div>
                    ) : null}
                  </div>
                </div>
                <div
                  data-plasmic-name={"editorialContentPanel3"}
                  data-plasmic-override={overrides.editorialContentPanel3}
                  className={classNames(
                    projectcss.all,
                    sty.editorialContentPanel3
                  )}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tagGroup3"}
                      data-plasmic-override={overrides.tagGroup3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tagGroup3)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag7"}
                        data-plasmic-override={overrides.tag7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag7)}
                      >
                        <div
                          data-plasmic-name={"usa7"}
                          data-plasmic-override={overrides.usa7}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa7
                          )}
                        >
                          {"EXPERIENCES"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag8"}
                        data-plasmic-override={overrides.tag8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag8)}
                      >
                        <div
                          data-plasmic-name={"usa8"}
                          data-plasmic-override={overrides.usa8}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa8
                          )}
                        >
                          {"MANITOBA"}
                        </div>
                      </Stack__>
                      {false ? (
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"tag9"}
                          data-plasmic-override={overrides.tag9}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.tag9)}
                        >
                          <div
                            data-plasmic-name={"usa9"}
                            data-plasmic-override={overrides.usa9}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.usa9
                            )}
                          >
                            {"tag"}
                          </div>
                        </Stack__>
                      ) : null}
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"titleBody3"}
                      data-plasmic-override={overrides.titleBody3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.titleBody3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9PRib
                        )}
                      >
                        <div
                          data-plasmic-name={"headline3"}
                          data-plasmic-override={overrides.headline3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.headline3
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                          }
                        </div>
                      </div>
                      {false ? (
                        <div
                          data-plasmic-name={"body3"}
                          data-plasmic-override={overrides.body3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.body3
                          )}
                        >
                          {
                            "Optional description exposed.  Lorem ipsum dolor sit amet consectetur. Praesent id id in imperdiet dis mus..."
                          }
                        </div>
                      ) : null}
                    </Stack__>
                    <div
                      data-plasmic-name={"date3"}
                      data-plasmic-override={overrides.date3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.date3
                      )}
                    >
                      {"August 2024"}
                    </div>
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"buttonText4"}
                        data-plasmic-override={overrides.buttonText4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.buttonText4)}
                      >
                        {false ? (
                          <IconsChevronIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dCt97
                            )}
                            role={"img"}
                          />
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uyRr8
                          )}
                        >
                          <div
                            data-plasmic-name={"text8"}
                            data-plasmic-override={overrides.text8}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text8
                            )}
                          >
                            {"Stay here"}
                          </div>
                        </div>
                        <IconsChevronIcon
                          className={classNames(projectcss.all, sty.svg__dTyC)}
                          role={"img"}
                        />
                      </Stack__>
                    ) : null}
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"screenshot20230518At12184"}
                data-plasmic-override={overrides.screenshot20230518At12184}
                className={classNames(
                  projectcss.all,
                  sty.screenshot20230518At12184
                )}
              />
            </div>
          </div>
          <div
            data-plasmic-name={"group1073716554"}
            data-plasmic-override={overrides.group1073716554}
            className={classNames(projectcss.all, sty.group1073716554)}
          >
            <div
              data-plasmic-name={"editorialCardsDesktop4"}
              data-plasmic-override={overrides.editorialCardsDesktop4}
              className={classNames(projectcss.all, sty.editorialCardsDesktop4)}
            >
              {false ? (
                <div
                  data-plasmic-name={"text9"}
                  data-plasmic-override={overrides.text9}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text9
                  )}
                >
                  {"03"}
                </div>
              ) : null}
              <div
                data-plasmic-name={"image8"}
                data-plasmic-override={overrides.image8}
                className={classNames(projectcss.all, sty.image8)}
              >
                <div
                  data-plasmic-name={"mediaSizes5"}
                  data-plasmic-override={overrides.mediaSizes5}
                  className={classNames(projectcss.all, sty.mediaSizes5)}
                >
                  {false ? (
                    <div
                      data-plasmic-name={"image9"}
                      data-plasmic-override={overrides.image9}
                      className={classNames(projectcss.all, sty.image9)}
                    >
                      <div
                        data-plasmic-name={"travelTipsRyanCollage02396534"}
                        data-plasmic-override={
                          overrides.travelTipsRyanCollage02396534
                        }
                        className={classNames(
                          projectcss.all,
                          sty.travelTipsRyanCollage02396534
                        )}
                      />
                    </div>
                  ) : null}
                </div>
              </div>
              <div
                data-plasmic-name={"editorialContentPanel4"}
                data-plasmic-override={overrides.editorialContentPanel4}
                className={classNames(
                  projectcss.all,
                  sty.editorialContentPanel4
                )}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content4"}
                  data-plasmic-override={overrides.content4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"tagGroup4"}
                    data-plasmic-override={overrides.tagGroup4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.tagGroup4)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tag10"}
                      data-plasmic-override={overrides.tag10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tag10)}
                    >
                      <div
                        data-plasmic-name={"usa10"}
                        data-plasmic-override={overrides.usa10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.usa10
                        )}
                      >
                        {"DINING"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"tag11"}
                      data-plasmic-override={overrides.tag11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.tag11)}
                    >
                      <div
                        data-plasmic-name={"usa11"}
                        data-plasmic-override={overrides.usa11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.usa11
                        )}
                      >
                        {"ONTARIO"}
                      </div>
                    </Stack__>
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"tag12"}
                        data-plasmic-override={overrides.tag12}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.tag12)}
                      >
                        <div
                          data-plasmic-name={"usa12"}
                          data-plasmic-override={overrides.usa12}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usa12
                          )}
                        >
                          {"tag"}
                        </div>
                      </Stack__>
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"titleBody4"}
                    data-plasmic-override={overrides.titleBody4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.titleBody4)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mkOy3)}
                    >
                      <div
                        data-plasmic-name={"headline4"}
                        data-plasmic-override={overrides.headline4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.headline4
                        )}
                      >
                        {
                          "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                        }
                      </div>
                    </div>
                    {false ? (
                      <div
                        data-plasmic-name={"body4"}
                        data-plasmic-override={overrides.body4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.body4
                        )}
                      >
                        {
                          "Optional description exposed.  Lorem ipsum dolor sit amet consectetur. Praesent id id in imperdiet dis mus..."
                        }
                      </div>
                    ) : null}
                  </Stack__>
                  <div
                    data-plasmic-name={"date4"}
                    data-plasmic-override={overrides.date4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.date4
                    )}
                  >
                    {"August 2024"}
                  </div>
                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"buttonText5"}
                      data-plasmic-override={overrides.buttonText5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonText5)}
                    >
                      {false ? (
                        <IconsChevronIcon
                          className={classNames(projectcss.all, sty.svg__pqwP)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__p245L
                        )}
                      >
                        <div
                          data-plasmic-name={"text10"}
                          data-plasmic-override={overrides.text10}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text10
                          )}
                        >
                          {"Stay here"}
                        </div>
                      </div>
                      <IconsChevronIcon
                        className={classNames(projectcss.all, sty.svg__y94Y)}
                        role={"img"}
                      />
                    </Stack__>
                  ) : null}
                </Stack__>
              </div>
            </div>
            <div
              data-plasmic-name={"screenshot20230518At12185"}
              data-plasmic-override={overrides.screenshot20230518At12185}
              className={classNames(
                projectcss.all,
                sty.screenshot20230518At12185
              )}
            />
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "group1073717185",
    "rectangle2649203",
    "group1073716564",
    "group1073716555",
    "group1073716542",
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181",
    "group1073717184",
    "group1073717183",
    "group1073716550",
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4",
    "screenshot20230518At12182",
    "group1073716551",
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6",
    "screenshot20230518At12183",
    "group1073716553",
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8",
    "screenshot20230518At12184",
    "group1073716554",
    "editorialCardsDesktop4",
    "text9",
    "image8",
    "mediaSizes5",
    "image9",
    "travelTipsRyanCollage02396534",
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10",
    "screenshot20230518At12185"
  ],
  group1073717185: [
    "group1073717185",
    "rectangle2649203",
    "group1073716564",
    "group1073716555",
    "group1073716542",
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181",
    "group1073717184",
    "group1073717183",
    "group1073716550",
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4",
    "screenshot20230518At12182",
    "group1073716551",
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6",
    "screenshot20230518At12183",
    "group1073716553",
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8",
    "screenshot20230518At12184",
    "group1073716554",
    "editorialCardsDesktop4",
    "text9",
    "image8",
    "mediaSizes5",
    "image9",
    "travelTipsRyanCollage02396534",
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10",
    "screenshot20230518At12185"
  ],
  rectangle2649203: ["rectangle2649203"],
  group1073716564: [
    "group1073716564",
    "group1073716555",
    "group1073716542",
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181"
  ],
  group1073716555: [
    "group1073716555",
    "group1073716542",
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181"
  ],
  group1073716542: [
    "group1073716542",
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181"
  ],
  group1073716293: [
    "group1073716293",
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2",
    "mediaSizes",
    "image",
    "screenshot20230518At12181"
  ],
  _3UpCards: [
    "_3UpCards",
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2"
  ],
  sectionTitle: [
    "sectionTitle",
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit",
    "cta",
    "buttonText",
    "text2"
  ],
  text: [
    "text",
    "optionalEyebrow",
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit"
  ],
  optionalEyebrow: ["optionalEyebrow"],
  headerSubline: [
    "headerSubline",
    "sectionTitle2",
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit"
  ],
  sectionTitle2: ["sectionTitle2"],
  loremIpsumDolorSitAmetConsecteturAdipiscingElit: [
    "loremIpsumDolorSitAmetConsecteturAdipiscingElit"
  ],
  cta: ["cta", "buttonText", "text2"],
  buttonText: ["buttonText", "text2"],
  text2: ["text2"],
  mediaSizes: ["mediaSizes", "image", "screenshot20230518At12181"],
  image: ["image", "screenshot20230518At12181"],
  screenshot20230518At12181: ["screenshot20230518At12181"],
  group1073717184: [
    "group1073717184",
    "group1073717183",
    "group1073716550",
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4",
    "screenshot20230518At12182",
    "group1073716551",
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6",
    "screenshot20230518At12183",
    "group1073716553",
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8",
    "screenshot20230518At12184",
    "group1073716554",
    "editorialCardsDesktop4",
    "text9",
    "image8",
    "mediaSizes5",
    "image9",
    "travelTipsRyanCollage02396534",
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10",
    "screenshot20230518At12185"
  ],
  group1073717183: [
    "group1073717183",
    "group1073716550",
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4",
    "screenshot20230518At12182",
    "group1073716551",
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6",
    "screenshot20230518At12183",
    "group1073716553",
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8",
    "screenshot20230518At12184"
  ],
  group1073716550: [
    "group1073716550",
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4",
    "screenshot20230518At12182"
  ],
  editorialCardsDesktop: [
    "editorialCardsDesktop",
    "text3",
    "image2",
    "mediaSizes2",
    "image3",
    "travelTipsRyanCollage02396531",
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4"
  ],
  text3: ["text3"],
  image2: ["image2", "mediaSizes2", "image3", "travelTipsRyanCollage02396531"],
  mediaSizes2: ["mediaSizes2", "image3", "travelTipsRyanCollage02396531"],
  image3: ["image3", "travelTipsRyanCollage02396531"],
  travelTipsRyanCollage02396531: ["travelTipsRyanCollage02396531"],
  editorialContentPanel: [
    "editorialContentPanel",
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4"
  ],
  content: [
    "content",
    "tagGroup",
    "tag",
    "usa",
    "tag2",
    "usa2",
    "tag3",
    "usa3",
    "titleBody",
    "headline",
    "body",
    "date",
    "buttonText2",
    "text4"
  ],
  tagGroup: ["tagGroup", "tag", "usa", "tag2", "usa2", "tag3", "usa3"],
  tag: ["tag", "usa"],
  usa: ["usa"],
  tag2: ["tag2", "usa2"],
  usa2: ["usa2"],
  tag3: ["tag3", "usa3"],
  usa3: ["usa3"],
  titleBody: ["titleBody", "headline", "body"],
  headline: ["headline"],
  body: ["body"],
  date: ["date"],
  buttonText2: ["buttonText2", "text4"],
  text4: ["text4"],
  screenshot20230518At12182: ["screenshot20230518At12182"],
  group1073716551: [
    "group1073716551",
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6",
    "screenshot20230518At12183"
  ],
  editorialCardsDesktop2: [
    "editorialCardsDesktop2",
    "text5",
    "image4",
    "mediaSizes3",
    "image5",
    "travelTipsRyanCollage02396532",
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6"
  ],
  text5: ["text5"],
  image4: ["image4", "mediaSizes3", "image5", "travelTipsRyanCollage02396532"],
  mediaSizes3: ["mediaSizes3", "image5", "travelTipsRyanCollage02396532"],
  image5: ["image5", "travelTipsRyanCollage02396532"],
  travelTipsRyanCollage02396532: ["travelTipsRyanCollage02396532"],
  editorialContentPanel2: [
    "editorialContentPanel2",
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6"
  ],
  content2: [
    "content2",
    "tagGroup2",
    "tag4",
    "usa4",
    "tag5",
    "usa5",
    "tag6",
    "usa6",
    "titleBody2",
    "headline2",
    "body2",
    "date2",
    "buttonText3",
    "text6"
  ],
  tagGroup2: ["tagGroup2", "tag4", "usa4", "tag5", "usa5", "tag6", "usa6"],
  tag4: ["tag4", "usa4"],
  usa4: ["usa4"],
  tag5: ["tag5", "usa5"],
  usa5: ["usa5"],
  tag6: ["tag6", "usa6"],
  usa6: ["usa6"],
  titleBody2: ["titleBody2", "headline2", "body2"],
  headline2: ["headline2"],
  body2: ["body2"],
  date2: ["date2"],
  buttonText3: ["buttonText3", "text6"],
  text6: ["text6"],
  screenshot20230518At12183: ["screenshot20230518At12183"],
  group1073716553: [
    "group1073716553",
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8",
    "screenshot20230518At12184"
  ],
  editorialCardsDesktop3: [
    "editorialCardsDesktop3",
    "text7",
    "image6",
    "mediaSizes4",
    "image7",
    "travelTipsRyanCollage02396533",
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8"
  ],
  text7: ["text7"],
  image6: ["image6", "mediaSizes4", "image7", "travelTipsRyanCollage02396533"],
  mediaSizes4: ["mediaSizes4", "image7", "travelTipsRyanCollage02396533"],
  image7: ["image7", "travelTipsRyanCollage02396533"],
  travelTipsRyanCollage02396533: ["travelTipsRyanCollage02396533"],
  editorialContentPanel3: [
    "editorialContentPanel3",
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8"
  ],
  content3: [
    "content3",
    "tagGroup3",
    "tag7",
    "usa7",
    "tag8",
    "usa8",
    "tag9",
    "usa9",
    "titleBody3",
    "headline3",
    "body3",
    "date3",
    "buttonText4",
    "text8"
  ],
  tagGroup3: ["tagGroup3", "tag7", "usa7", "tag8", "usa8", "tag9", "usa9"],
  tag7: ["tag7", "usa7"],
  usa7: ["usa7"],
  tag8: ["tag8", "usa8"],
  usa8: ["usa8"],
  tag9: ["tag9", "usa9"],
  usa9: ["usa9"],
  titleBody3: ["titleBody3", "headline3", "body3"],
  headline3: ["headline3"],
  body3: ["body3"],
  date3: ["date3"],
  buttonText4: ["buttonText4", "text8"],
  text8: ["text8"],
  screenshot20230518At12184: ["screenshot20230518At12184"],
  group1073716554: [
    "group1073716554",
    "editorialCardsDesktop4",
    "text9",
    "image8",
    "mediaSizes5",
    "image9",
    "travelTipsRyanCollage02396534",
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10",
    "screenshot20230518At12185"
  ],
  editorialCardsDesktop4: [
    "editorialCardsDesktop4",
    "text9",
    "image8",
    "mediaSizes5",
    "image9",
    "travelTipsRyanCollage02396534",
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10"
  ],
  text9: ["text9"],
  image8: ["image8", "mediaSizes5", "image9", "travelTipsRyanCollage02396534"],
  mediaSizes5: ["mediaSizes5", "image9", "travelTipsRyanCollage02396534"],
  image9: ["image9", "travelTipsRyanCollage02396534"],
  travelTipsRyanCollage02396534: ["travelTipsRyanCollage02396534"],
  editorialContentPanel4: [
    "editorialContentPanel4",
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10"
  ],
  content4: [
    "content4",
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12",
    "titleBody4",
    "headline4",
    "body4",
    "date4",
    "buttonText5",
    "text10"
  ],
  tagGroup4: [
    "tagGroup4",
    "tag10",
    "usa10",
    "tag11",
    "usa11",
    "tag12",
    "usa12"
  ],
  tag10: ["tag10", "usa10"],
  usa10: ["usa10"],
  tag11: ["tag11", "usa11"],
  usa11: ["usa11"],
  tag12: ["tag12", "usa12"],
  usa12: ["usa12"],
  titleBody4: ["titleBody4", "headline4", "body4"],
  headline4: ["headline4"],
  body4: ["body4"],
  date4: ["date4"],
  buttonText5: ["buttonText5", "text10"],
  text10: ["text10"],
  screenshot20230518At12185: ["screenshot20230518At12185"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  group1073717185: "div";
  rectangle2649203: "div";
  group1073716564: "div";
  group1073716555: "div";
  group1073716542: "div";
  group1073716293: "div";
  _3UpCards: "div";
  sectionTitle: "div";
  text: "div";
  optionalEyebrow: "div";
  headerSubline: "div";
  sectionTitle2: "div";
  loremIpsumDolorSitAmetConsecteturAdipiscingElit: "div";
  cta: "div";
  buttonText: "div";
  text2: "div";
  mediaSizes: "div";
  image: "div";
  screenshot20230518At12181: "div";
  group1073717184: "div";
  group1073717183: "div";
  group1073716550: "div";
  editorialCardsDesktop: "div";
  text3: "div";
  image2: "div";
  mediaSizes2: "div";
  image3: "div";
  travelTipsRyanCollage02396531: "div";
  editorialContentPanel: "div";
  content: "div";
  tagGroup: "div";
  tag: "div";
  usa: "div";
  tag2: "div";
  usa2: "div";
  tag3: "div";
  usa3: "div";
  titleBody: "div";
  headline: "div";
  body: "div";
  date: "div";
  buttonText2: "div";
  text4: "div";
  screenshot20230518At12182: "div";
  group1073716551: "div";
  editorialCardsDesktop2: "div";
  text5: "div";
  image4: "div";
  mediaSizes3: "div";
  image5: "div";
  travelTipsRyanCollage02396532: "div";
  editorialContentPanel2: "div";
  content2: "div";
  tagGroup2: "div";
  tag4: "div";
  usa4: "div";
  tag5: "div";
  usa5: "div";
  tag6: "div";
  usa6: "div";
  titleBody2: "div";
  headline2: "div";
  body2: "div";
  date2: "div";
  buttonText3: "div";
  text6: "div";
  screenshot20230518At12183: "div";
  group1073716553: "div";
  editorialCardsDesktop3: "div";
  text7: "div";
  image6: "div";
  mediaSizes4: "div";
  image7: "div";
  travelTipsRyanCollage02396533: "div";
  editorialContentPanel3: "div";
  content3: "div";
  tagGroup3: "div";
  tag7: "div";
  usa7: "div";
  tag8: "div";
  usa8: "div";
  tag9: "div";
  usa9: "div";
  titleBody3: "div";
  headline3: "div";
  body3: "div";
  date3: "div";
  buttonText4: "div";
  text8: "div";
  screenshot20230518At12184: "div";
  group1073716554: "div";
  editorialCardsDesktop4: "div";
  text9: "div";
  image8: "div";
  mediaSizes5: "div";
  image9: "div";
  travelTipsRyanCollage02396534: "div";
  editorialContentPanel4: "div";
  content4: "div";
  tagGroup4: "div";
  tag10: "div";
  usa10: "div";
  tag11: "div";
  usa11: "div";
  tag12: "div";
  usa12: "div";
  titleBody4: "div";
  headline4: "div";
  body4: "div";
  date4: "div";
  buttonText5: "div";
  text10: "div";
  screenshot20230518At12185: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicComponentOne__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicComponentOne__VariantsArgs;
    args?: PlasmicComponentOne__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicComponentOne__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicComponentOne__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicComponentOne__ArgProps,
          internalVariantPropNames: PlasmicComponentOne__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicComponentOne__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicComponentOne";
  } else {
    func.displayName = `PlasmicComponentOne.${nodeName}`;
  }
  return func;
}

export const PlasmicComponentOne = Object.assign(
  // Top-level PlasmicComponentOne renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    group1073717185: makeNodeComponent("group1073717185"),
    rectangle2649203: makeNodeComponent("rectangle2649203"),
    group1073716564: makeNodeComponent("group1073716564"),
    group1073716555: makeNodeComponent("group1073716555"),
    group1073716542: makeNodeComponent("group1073716542"),
    group1073716293: makeNodeComponent("group1073716293"),
    _3UpCards: makeNodeComponent("_3UpCards"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    text: makeNodeComponent("text"),
    optionalEyebrow: makeNodeComponent("optionalEyebrow"),
    headerSubline: makeNodeComponent("headerSubline"),
    sectionTitle2: makeNodeComponent("sectionTitle2"),
    loremIpsumDolorSitAmetConsecteturAdipiscingElit: makeNodeComponent(
      "loremIpsumDolorSitAmetConsecteturAdipiscingElit"
    ),
    cta: makeNodeComponent("cta"),
    buttonText: makeNodeComponent("buttonText"),
    text2: makeNodeComponent("text2"),
    mediaSizes: makeNodeComponent("mediaSizes"),
    image: makeNodeComponent("image"),
    screenshot20230518At12181: makeNodeComponent("screenshot20230518At12181"),
    group1073717184: makeNodeComponent("group1073717184"),
    group1073717183: makeNodeComponent("group1073717183"),
    group1073716550: makeNodeComponent("group1073716550"),
    editorialCardsDesktop: makeNodeComponent("editorialCardsDesktop"),
    text3: makeNodeComponent("text3"),
    image2: makeNodeComponent("image2"),
    mediaSizes2: makeNodeComponent("mediaSizes2"),
    image3: makeNodeComponent("image3"),
    travelTipsRyanCollage02396531: makeNodeComponent(
      "travelTipsRyanCollage02396531"
    ),
    editorialContentPanel: makeNodeComponent("editorialContentPanel"),
    content: makeNodeComponent("content"),
    tagGroup: makeNodeComponent("tagGroup"),
    tag: makeNodeComponent("tag"),
    usa: makeNodeComponent("usa"),
    tag2: makeNodeComponent("tag2"),
    usa2: makeNodeComponent("usa2"),
    tag3: makeNodeComponent("tag3"),
    usa3: makeNodeComponent("usa3"),
    titleBody: makeNodeComponent("titleBody"),
    headline: makeNodeComponent("headline"),
    body: makeNodeComponent("body"),
    date: makeNodeComponent("date"),
    buttonText2: makeNodeComponent("buttonText2"),
    text4: makeNodeComponent("text4"),
    screenshot20230518At12182: makeNodeComponent("screenshot20230518At12182"),
    group1073716551: makeNodeComponent("group1073716551"),
    editorialCardsDesktop2: makeNodeComponent("editorialCardsDesktop2"),
    text5: makeNodeComponent("text5"),
    image4: makeNodeComponent("image4"),
    mediaSizes3: makeNodeComponent("mediaSizes3"),
    image5: makeNodeComponent("image5"),
    travelTipsRyanCollage02396532: makeNodeComponent(
      "travelTipsRyanCollage02396532"
    ),
    editorialContentPanel2: makeNodeComponent("editorialContentPanel2"),
    content2: makeNodeComponent("content2"),
    tagGroup2: makeNodeComponent("tagGroup2"),
    tag4: makeNodeComponent("tag4"),
    usa4: makeNodeComponent("usa4"),
    tag5: makeNodeComponent("tag5"),
    usa5: makeNodeComponent("usa5"),
    tag6: makeNodeComponent("tag6"),
    usa6: makeNodeComponent("usa6"),
    titleBody2: makeNodeComponent("titleBody2"),
    headline2: makeNodeComponent("headline2"),
    body2: makeNodeComponent("body2"),
    date2: makeNodeComponent("date2"),
    buttonText3: makeNodeComponent("buttonText3"),
    text6: makeNodeComponent("text6"),
    screenshot20230518At12183: makeNodeComponent("screenshot20230518At12183"),
    group1073716553: makeNodeComponent("group1073716553"),
    editorialCardsDesktop3: makeNodeComponent("editorialCardsDesktop3"),
    text7: makeNodeComponent("text7"),
    image6: makeNodeComponent("image6"),
    mediaSizes4: makeNodeComponent("mediaSizes4"),
    image7: makeNodeComponent("image7"),
    travelTipsRyanCollage02396533: makeNodeComponent(
      "travelTipsRyanCollage02396533"
    ),
    editorialContentPanel3: makeNodeComponent("editorialContentPanel3"),
    content3: makeNodeComponent("content3"),
    tagGroup3: makeNodeComponent("tagGroup3"),
    tag7: makeNodeComponent("tag7"),
    usa7: makeNodeComponent("usa7"),
    tag8: makeNodeComponent("tag8"),
    usa8: makeNodeComponent("usa8"),
    tag9: makeNodeComponent("tag9"),
    usa9: makeNodeComponent("usa9"),
    titleBody3: makeNodeComponent("titleBody3"),
    headline3: makeNodeComponent("headline3"),
    body3: makeNodeComponent("body3"),
    date3: makeNodeComponent("date3"),
    buttonText4: makeNodeComponent("buttonText4"),
    text8: makeNodeComponent("text8"),
    screenshot20230518At12184: makeNodeComponent("screenshot20230518At12184"),
    group1073716554: makeNodeComponent("group1073716554"),
    editorialCardsDesktop4: makeNodeComponent("editorialCardsDesktop4"),
    text9: makeNodeComponent("text9"),
    image8: makeNodeComponent("image8"),
    mediaSizes5: makeNodeComponent("mediaSizes5"),
    image9: makeNodeComponent("image9"),
    travelTipsRyanCollage02396534: makeNodeComponent(
      "travelTipsRyanCollage02396534"
    ),
    editorialContentPanel4: makeNodeComponent("editorialContentPanel4"),
    content4: makeNodeComponent("content4"),
    tagGroup4: makeNodeComponent("tagGroup4"),
    tag10: makeNodeComponent("tag10"),
    usa10: makeNodeComponent("usa10"),
    tag11: makeNodeComponent("tag11"),
    usa11: makeNodeComponent("usa11"),
    tag12: makeNodeComponent("tag12"),
    usa12: makeNodeComponent("usa12"),
    titleBody4: makeNodeComponent("titleBody4"),
    headline4: makeNodeComponent("headline4"),
    body4: makeNodeComponent("body4"),
    date4: makeNodeComponent("date4"),
    buttonText5: makeNodeComponent("buttonText5"),
    text10: makeNodeComponent("text10"),
    screenshot20230518At12185: makeNodeComponent("screenshot20230518At12185"),

    // Metadata about props expected for PlasmicComponentOne
    internalVariantProps: PlasmicComponentOne__VariantProps,
    internalArgProps: PlasmicComponentOne__ArgProps
  }
);

export default PlasmicComponentOne;
/* prettier-ignore-end */
